doctype 5
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    title #{symbol} stream
    :stylus
      @css {
        @import url(http://fonts.googleapis.com/css?family=Droid+Sans:400);
      }
      body
        margin 0
        padding 0
        font-family 'Droid Sans', sans-serif
        background linear-gradient(to right, rgba(0,0,0,0.1) 0%,rgba(0,0,0,0.05) 20%,rgba(0,0,0,0.05) 80%,rgba(0,0,0,0.1) 100%), url('/img/noise.png'); 

      blockquote.twitter-tweet 
        display none

      #tweet-stream 
        margin-right auto
        margin-left auto
        width 500px

        .faucet, .sink
          width @width - 3px // compensate for embedded tweets size problem
          text-align center
          padding 5px 0 5px 0
          background-color rgba(steelblue, 0.6)
          color white

        .faucet
          position fixed
          top 0
          border-bottom-left-radius 5px
          border-bottom-right-radius @border-bottom-left-radius

        .sink
          display none
          cursor pointer
          border-top-left-radius 5px
          border-top-right-radius @border-top-left-radius

        .queue
          margin-top 40px

      @media (max-width: 500px)
        #tweet-stream
          width 95%
          .faucet
            width @width
          .sink
            width 100%

      @media (max-width: 260px)
        html
          width 260px
        #tweet-stream
          width 250px
          padding-left 5px
          padding-right @padding-left
          .faucet
            width @width
          .sink
            width 100%
  body
    #tweet-stream
      .faucet waiting for tweets...
      .queue
      .sink older tweets

    script(src='//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js')
    script(src='//platform.twitter.com/widgets.js')
    script(src='/socket.io/socket.io.js')
    script(src='/js/visibility.js')
    script(src='/js/flash.js')
    script(src='/js/utils.js')
    script(src='/js/draftHtml5Apis.js')
    //- using Google universal analytics, provides ga object
    include _ga
    script.
      function notify(symbol) {
        // generate notification
        if ('on' == getPref('show notifications', 'on') && document[hidden]) {
          var n = new Notification(symbol + ' Alert', {
              body: 'a possible market driving event is detected from #{company}-related tweets.',
              tag: symbol,
          });
          n.onclick = function () {
            window.focus();
            console.log('notification clicked');
            this.close();
            ga('send', 'event', {
              eventCategory: tracker.get('clientId'),
              eventAction: 'notification-click-after:' + (Date.now() - tNotify),
              eventLabel: '/stream/' + symbol,
            });
          };
          n.show();
          tNotify = Date.now();
        }
        if ('on' == getPref('play alerts', 'on') && audio.ready)
          playAudio(audio.ctx, audio.chime);
        flash.flash('alert: ' + symbol);
      }

      function popFromQueue(sink) {
        // move last tweet off queue into sink
        var tweet = $('.twitter-tweet:visible:last');
        tweet.hide();
        sink.push(tweet);
        $('.sink').text(sink.length + ' older tweets').show();
      }

      function pushIntoFaucet(newTweet, faucet) {
        faucet.push(newTweet);
        $('.faucet').text(faucet.length + ' new tweets').show();
      }
    script.
      normalizeApis();
      
      var symbol = '#{symbol}',
          audio = initAudio(),
          feed = io.connect(document.location.origin + '/' + symbol),
          reading = false,
          faucet = [],
          depth = #{queueDepth},
          batch = #{batchSize},
          sink = [],
          tracker,
          t0 = Date.now(),
          t1 = t0,
          checkViewportSizeHandle,
          tNotify;
      // init GA tracker
      ga(function() {
        tracker = ga.getByName('t0');
      });
      // stop flashing title
      $(document).on(visibilityChange, function () {
        if (!document[hidden]) {
          flash.restore();
          console.log('visible');
          ga('send', 'event', {
            eventCategory: tracker.get('clientId'),
            eventAction: 'page-hide-for:' + (Date.now() - t1),
            eventLabel: '/stream/' + symbol,
          });
        } else {
          ga('send', 'event', {
            eventCategory: tracker.get('clientId'),
            eventAction: 'page-show-for:' + (Date.now() - t1),
            eventLabel: '/stream/' + symbol,
          });
        }
        t1 = Date.now();
      })
      .scroll(function () {
        reading = true;
        flash.restore();
        console.log('scrolled');
      })
      .click(function () {
        flash.restore();
        console.log('viewport clicked');
      });
      $(window).resize(function () {
        checkViewportSizeHandle = checkViewportSizeHandle || setTimeout(function () {
          console.log('resized');
          ga('send', 'event', {
            eventCategory: tracker.get('clientId'),
            eventAction: 'resize:' + $(document).width() + 'x' + $(document).height(),
            eventLabel: '/stream/' + symbol,
          });
          checkViewportSizeHandle = undefined;
        }, 10000);
      })
      .on('beforeunload', function () {
        ga('send', 'event', {
          eventCategory: tracker.get('clientId'),
          eventAction: 'page-open-for:' + (Date.now() - t0),
          eventLabel: '/stream/' + symbol,
        });
      });
      
      $('.sink').hide().click(function () {
        console.log('sink clicked');
        // pop a few tweets from sink
        var n = batch,
            q = $('.queue'),
            firstOld;
        while (sink.length > 0 && --n >= 0) {
          var t = sink.pop();
          firstOld = firstOld || t;
          t.show();
          $(this).text(sink.length + ' older tweets');
        }
        $('body,html').animate({
          scrollTop: firstOld.offset().top
        }, 500);
        if (sink.length == 0)
          $(this).hide();
      });
      // realtime feed
      feed.on('new tweet', function (data) {
        console.log(data);
        var newTweet = $(data.html).attr('data-theme', 'light')
            .attr('data-dnt', 'true')
            .attr('width', '500');
        if ($('.twitter-tweet:visible').length == 0) {
          // receiving first tweet
          $('.faucet').hide()
          .css('cursor', 'pointer')
          .click(function () {
            console.log('faucet clicked');
            // flush tweets in faucet
            var f = $(this),
                q = $('.queue');
            while (faucet.length > 0) {
              var t = faucet.shift();
              q.prepend(t);
            }
            twttr.widgets.load();
            $('body,html').animate({
              scrollTop: 0
            }, 500, 'swing', function() { 
              reading = false; 
            });
            f.hide();
          });
        } 
        if (reading) {
          pushIntoFaucet(newTweet, faucet);
        } else {
          if ($('.twitter-tweet:visible').length < depth) {
            // render directly into queue
            $('#tweet-stream .queue').prepend(newTweet);
            twttr.widgets.load();
          } else {
            // the queue is full
            // remove the bottom one from queue
            popFromQueue(sink);
            // render the new tweet
            $('#tweet-stream .queue').prepend(newTweet);
            twttr.widgets.load();
          }
        }
      })
      .on('new volume', function (data) {
        console.log(data);
      })
      .on('new alert', function (data) {
        console.log(data);
        notify(symbol);
      });

</script>